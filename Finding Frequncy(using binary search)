//1st sort the array
//Apply binary search for finding the lower and higher index of repeating elements.
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    static int low_search(int []a,int n,int q,boolean s){
        int result=0;
        int low=0;
        int high=n-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(a[mid]==q){
                result=mid;
                if(s==true){
                high=mid-1;}
                else{
                low=mid+1;
                }
            }
            else if(a[mid]>q){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return result;
    }
     public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int a[]=new int [n];
        for(int i=0;i<n;i++){
            a[i]=sc.nextInt();
        }
        
        Arrays.sort(a);
        int m=sc.nextInt();
        for(int i=0;i<m;i++){
            int q=sc.nextInt();
            
            int low=low_search(a,n,q,true);
            int high=low_search(a,n,q,false);
            if(low==0&&high==0){
                System.out.println(0);
            }else
                System.out.println(high-low+1);
        }
    }
}
